drop table if exists bookings;
drop table if exists comments;
drop table if exists items;
drop table if exists requests;
drop table if exists users;

create table if not exists users
(
    user_id bigint generated by default as identity,
    name    varchar(255) not null,
    email   varchar(255) not null,
    constraint pk_user primary key (user_id),
    constraint uq_user_email unique (email)
);

create table if not exists requests
(
    request_id   bigint generated by default as identity,
    description  varchar(255) not null,
    requestor_id bigint       not null,
    created      timestamp    not null,
    constraint request_pk primary key (request_id),
    constraint fk_requests_to_users foreign key (requestor_id) references users (user_id) on delete cascade
);

create table if not exists items
(
    item_id     bigint generated by default as identity,
    name        varchar(255) not null,
    description varchar(255) not null,
    available   boolean      not null,
    owner_id    bigint       not null,
    request_id  bigint,
    constraint items_pk primary key (item_id),
    constraint fk_items_to_users foreign key (owner_id) references users (user_id) on delete cascade,
    constraint fk_items_to_requests foreign key (request_id) references requests (request_id) on delete cascade
);

create table if not exists bookings
(
    booking_id bigint generated by default as identity,
    start_time timestamp   not null,
    end_time   timestamp   not null,
    item_id    bigint      not null,
    booker_id  bigint      not null,
    status     varchar(15) not null,
    constraint bookings_pk primary key (booking_id),
    constraint fk_bookings_to_users foreign key (booker_id) references users (user_id) on delete cascade,
    constraint fk_bookings_to_items foreign key (item_id) references items (item_id) on delete cascade
);

create table if not exists comments
(
    comment_id bigint generated by default as identity,
    text       varchar(255) not null,
    item_id    bigint       not null,
    author_id  bigint       not null,
    created    timestamp    not null,
    constraint comments_pk primary key (comment_id),
    constraint fk_comments_to_users foreign key (author_id) references users (user_id) on delete cascade,
    constraint fk_comments_to_items foreign key (item_id) references items (item_id) on delete cascade
);